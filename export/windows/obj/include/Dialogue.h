// Generated by Haxe 4.1.5
#ifndef INCLUDED_Dialogue
#define INCLUDED_Dialogue

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
HX_DECLARE_CLASS0(Dialogue)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS3(flixel,addons,text,FlxTypeText)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxAtlasFrames)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxFramesCollection)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES Dialogue_obj : public  ::flixel::group::FlxTypedSpriteGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedSpriteGroup_obj super;
		typedef Dialogue_obj OBJ_;
		Dialogue_obj();

	public:
		enum { _hx_ClassId = 0x33b8c15c };

		void __construct(::String anim, ::Dynamic audio,::Array< ::String > text,::String whichOne);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Dialogue")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Dialogue"); }
		static ::hx::ObjectPtr< Dialogue_obj > __new(::String anim, ::Dynamic audio,::Array< ::String > text,::String whichOne);
		static ::hx::ObjectPtr< Dialogue_obj > __alloc(::hx::Ctx *_hx_ctx,::String anim, ::Dynamic audio,::Array< ::String > text,::String whichOne);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Dialogue_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Dialogue",38,e9,45,81); }

		static void __boot();
		static bool saddial;
		 ::flixel::graphics::frames::FlxAtlasFrames tex;
		 ::flixel::addons::text::FlxTypeText dtext;
		 ::flixel::FlxSprite dialogueBox;
		 ::flixel::text::FlxText presskey;
		::Array< ::String > txtArray;
		::String globalAnim;
		bool globalAudio;
		::String endShit;
		int dcount;
		void update(Float elapsed);

		void doText();
		::Dynamic doText_dyn();

};


#endif /* INCLUDED_Dialogue */ 
