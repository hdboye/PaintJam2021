// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_lime_ui_MouseCursor
#include <lime/ui/MouseCursor.h>
#endif
#ifndef INCLUDED_openfl_ui__MouseCursor_MouseCursor_Impl_
#include <openfl/ui/_MouseCursor/MouseCursor_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_29_fromLimeCursor,"openfl.ui._MouseCursor.MouseCursor_Impl_","fromLimeCursor",0x6bf8a63e,"openfl.ui._MouseCursor.MouseCursor_Impl_.fromLimeCursor","openfl/ui/MouseCursor.hx",29,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_50_toLimeCursor,"openfl.ui._MouseCursor.MouseCursor_Impl_","toLimeCursor",0xdd84694f,"openfl.ui._MouseCursor.MouseCursor_Impl_.toLimeCursor","openfl/ui/MouseCursor.hx",50,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_10_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",10,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_11_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",11,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_12_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",12,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_13_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",13,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_14_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",14,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_16_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",16,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_17_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",17,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_18_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",18,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_19_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",19,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_20_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",20,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_21_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",21,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_22_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",22,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_23_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",23,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_24_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",24,0xebae9dff)
namespace openfl{
namespace ui{
namespace _MouseCursor{

void MouseCursor_Impl__obj::__construct() { }

Dynamic MouseCursor_Impl__obj::__CreateEmpty() { return new MouseCursor_Impl__obj; }

void *MouseCursor_Impl__obj::_hx_vtable = 0;

Dynamic MouseCursor_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MouseCursor_Impl__obj > _hx_result = new MouseCursor_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MouseCursor_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x38005e17;
}

::String MouseCursor_Impl__obj::ARROW;

::String MouseCursor_Impl__obj::AUTO;

::String MouseCursor_Impl__obj::BUTTON;

::String MouseCursor_Impl__obj::HAND;

::String MouseCursor_Impl__obj::IBEAM;

::String MouseCursor_Impl__obj::_hx___CROSSHAIR;

::String MouseCursor_Impl__obj::_hx___CUSTOM;

::String MouseCursor_Impl__obj::_hx___MOVE;

::String MouseCursor_Impl__obj::_hx___RESIZE_NESW;

::String MouseCursor_Impl__obj::_hx___RESIZE_NS;

::String MouseCursor_Impl__obj::_hx___RESIZE_NWSE;

::String MouseCursor_Impl__obj::_hx___RESIZE_WE;

::String MouseCursor_Impl__obj::_hx___WAIT;

::String MouseCursor_Impl__obj::_hx___WAIT_ARROW;

::String MouseCursor_Impl__obj::fromLimeCursor( ::lime::ui::MouseCursor cursor){
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_29_fromLimeCursor)
HXDLIN(  29)		switch((int)(cursor->_hx_getIndex())){
            			case (int)0: {
HXLINE(  31)				return HX_("arrow",c9,79,8f,25);
            			}
            			break;
            			case (int)1: {
HXLINE(  36)				return HX_("crosshair",a2,46,c8,8a);
            			}
            			break;
            			case (int)2: {
HXLINE(  32)				return HX_("auto",6f,df,76,40);
            			}
            			break;
            			case (int)3: {
HXLINE(  34)				return HX_("hand",6f,2b,08,45);
            			}
            			break;
            			case (int)4: {
HXLINE(  33)				return HX_("button",f2,61,e0,d9);
            			}
            			break;
            			case (int)5: {
HXLINE(  37)				return HX_("resize_nesw",06,ae,e9,a7);
            			}
            			break;
            			case (int)6: {
HXLINE(  38)				return HX_("resize_ns",f0,cc,f2,ab);
            			}
            			break;
            			case (int)7: {
HXLINE(  39)				return HX_("resize_nwse",86,56,f7,a7);
            			}
            			break;
            			case (int)8: {
HXLINE(  40)				return HX_("resize_we",b9,d4,f2,ab);
            			}
            			break;
            			case (int)9: {
HXLINE(  35)				return HX_("ibeam",58,ca,26,b6);
            			}
            			break;
            			case (int)10: {
HXLINE(  41)				return HX_("wait",75,5a,f2,4e);
            			}
            			break;
            			case (int)11: {
HXLINE(  42)				return HX_("waitarrow",34,17,98,4f);
            			}
            			break;
            			case (int)12: {
HXLINE(  43)				return HX_("custom",b1,87,92,3f);
            			}
            			break;
            		}
HXLINE(  29)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MouseCursor_Impl__obj,fromLimeCursor,return )

 ::lime::ui::MouseCursor MouseCursor_Impl__obj::toLimeCursor(::String this1){
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_50_toLimeCursor)
HXDLIN(  50)		::String _hx_switch_0 = this1;
            		if (  (_hx_switch_0==HX_("arrow",c9,79,8f,25)) ){
HXLINE(  52)			return ::lime::ui::MouseCursor_obj::ARROW_dyn();
HXDLIN(  52)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("auto",6f,df,76,40)) ){
HXLINE(  53)			return ::lime::ui::MouseCursor_obj::DEFAULT_dyn();
HXDLIN(  53)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("button",f2,61,e0,d9)) ){
HXLINE(  54)			return ::lime::ui::MouseCursor_obj::POINTER_dyn();
HXDLIN(  54)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("crosshair",a2,46,c8,8a)) ){
HXLINE(  57)			return ::lime::ui::MouseCursor_obj::CROSSHAIR_dyn();
HXDLIN(  57)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("custom",b1,87,92,3f)) ){
HXLINE(  64)			return ::lime::ui::MouseCursor_obj::CUSTOM_dyn();
HXDLIN(  64)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("hand",6f,2b,08,45)) ){
HXLINE(  55)			return ::lime::ui::MouseCursor_obj::MOVE_dyn();
HXDLIN(  55)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("ibeam",58,ca,26,b6)) ){
HXLINE(  56)			return ::lime::ui::MouseCursor_obj::TEXT_dyn();
HXDLIN(  56)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_nesw",06,ae,e9,a7)) ){
HXLINE(  58)			return ::lime::ui::MouseCursor_obj::RESIZE_NESW_dyn();
HXDLIN(  58)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_ns",f0,cc,f2,ab)) ){
HXLINE(  59)			return ::lime::ui::MouseCursor_obj::RESIZE_NS_dyn();
HXDLIN(  59)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_nwse",86,56,f7,a7)) ){
HXLINE(  60)			return ::lime::ui::MouseCursor_obj::RESIZE_NWSE_dyn();
HXDLIN(  60)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_we",b9,d4,f2,ab)) ){
HXLINE(  61)			return ::lime::ui::MouseCursor_obj::RESIZE_WE_dyn();
HXDLIN(  61)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("wait",75,5a,f2,4e)) ){
HXLINE(  62)			return ::lime::ui::MouseCursor_obj::WAIT_dyn();
HXDLIN(  62)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("waitarrow",34,17,98,4f)) ){
HXLINE(  63)			return ::lime::ui::MouseCursor_obj::WAIT_ARROW_dyn();
HXDLIN(  63)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE(  65)			return ::lime::ui::MouseCursor_obj::DEFAULT_dyn();
            		}
            		_hx_goto_1:;
HXLINE(  50)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MouseCursor_Impl__obj,toLimeCursor,return )


MouseCursor_Impl__obj::MouseCursor_Impl__obj()
{
}

bool MouseCursor_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"toLimeCursor") ) { outValue = toLimeCursor_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fromLimeCursor") ) { outValue = fromLimeCursor_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MouseCursor_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo MouseCursor_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::ARROW,HX_("ARROW",a9,b1,7d,a3)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::AUTO,HX_("AUTO",6f,a7,37,2b)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::BUTTON,HX_("BUTTON",f2,0d,63,8c)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::HAND,HX_("HAND",6f,f3,c8,2f)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::IBEAM,HX_("IBEAM",38,02,15,34)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___CROSSHAIR,HX_("__CROSSHAIR",62,ff,4c,b4)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___CUSTOM,HX_("__CUSTOM",d1,9e,44,9a)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___MOVE,HX_("__MOVE",31,0e,1a,e2)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_NESW,HX_("__RESIZE_NESW",e6,8a,70,33)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_NS,HX_("__RESIZE_NS",d0,cd,8f,d5)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_NWSE,HX_("__RESIZE_NWSE",66,33,7e,33)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_WE,HX_("__RESIZE_WE",99,d5,8f,d5)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___WAIT,HX_("__WAIT",95,85,ab,e8)},
	{::hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___WAIT_ARROW,HX_("__WAIT_ARROW",3f,5c,00,b5)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void MouseCursor_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::ARROW,"ARROW");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::AUTO,"AUTO");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::BUTTON,"BUTTON");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::HAND,"HAND");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::IBEAM,"IBEAM");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CROSSHAIR,"__CROSSHAIR");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CUSTOM,"__CUSTOM");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___MOVE,"__MOVE");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NESW,"__RESIZE_NESW");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NS,"__RESIZE_NS");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NWSE,"__RESIZE_NWSE");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_WE,"__RESIZE_WE");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT,"__WAIT");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT_ARROW,"__WAIT_ARROW");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MouseCursor_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::ARROW,"ARROW");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::AUTO,"AUTO");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::BUTTON,"BUTTON");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::HAND,"HAND");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::IBEAM,"IBEAM");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CROSSHAIR,"__CROSSHAIR");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CUSTOM,"__CUSTOM");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___MOVE,"__MOVE");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NESW,"__RESIZE_NESW");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NS,"__RESIZE_NS");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NWSE,"__RESIZE_NWSE");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_WE,"__RESIZE_WE");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT,"__WAIT");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT_ARROW,"__WAIT_ARROW");
};

#endif

::hx::Class MouseCursor_Impl__obj::__mClass;

static ::String MouseCursor_Impl__obj_sStaticFields[] = {
	HX_("ARROW",a9,b1,7d,a3),
	HX_("AUTO",6f,a7,37,2b),
	HX_("BUTTON",f2,0d,63,8c),
	HX_("HAND",6f,f3,c8,2f),
	HX_("IBEAM",38,02,15,34),
	HX_("__CROSSHAIR",62,ff,4c,b4),
	HX_("__CUSTOM",d1,9e,44,9a),
	HX_("__MOVE",31,0e,1a,e2),
	HX_("__RESIZE_NESW",e6,8a,70,33),
	HX_("__RESIZE_NS",d0,cd,8f,d5),
	HX_("__RESIZE_NWSE",66,33,7e,33),
	HX_("__RESIZE_WE",99,d5,8f,d5),
	HX_("__WAIT",95,85,ab,e8),
	HX_("__WAIT_ARROW",3f,5c,00,b5),
	HX_("fromLimeCursor",d5,69,8a,d2),
	HX_("toLimeCursor",26,49,3d,7c),
	::String(null())
};

void MouseCursor_Impl__obj::__register()
{
	MouseCursor_Impl__obj _hx_dummy;
	MouseCursor_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.ui._MouseCursor.MouseCursor_Impl_",e5,61,b2,51);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MouseCursor_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MouseCursor_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(MouseCursor_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< MouseCursor_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MouseCursor_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MouseCursor_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MouseCursor_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void MouseCursor_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_10_boot)
HXDLIN(  10)		ARROW = HX_("arrow",c9,79,8f,25);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_11_boot)
HXDLIN(  11)		AUTO = HX_("auto",6f,df,76,40);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_12_boot)
HXDLIN(  12)		BUTTON = HX_("button",f2,61,e0,d9);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_13_boot)
HXDLIN(  13)		HAND = HX_("hand",6f,2b,08,45);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_14_boot)
HXDLIN(  14)		IBEAM = HX_("ibeam",58,ca,26,b6);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_16_boot)
HXDLIN(  16)		_hx___CROSSHAIR = HX_("crosshair",a2,46,c8,8a);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_17_boot)
HXDLIN(  17)		_hx___CUSTOM = HX_("custom",b1,87,92,3f);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_18_boot)
HXDLIN(  18)		_hx___MOVE = HX_("move",11,e3,60,48);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_19_boot)
HXDLIN(  19)		_hx___RESIZE_NESW = HX_("resize_nesw",06,ae,e9,a7);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_20_boot)
HXDLIN(  20)		_hx___RESIZE_NS = HX_("resize_ns",f0,cc,f2,ab);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_21_boot)
HXDLIN(  21)		_hx___RESIZE_NWSE = HX_("resize_nwse",86,56,f7,a7);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_22_boot)
HXDLIN(  22)		_hx___RESIZE_WE = HX_("resize_we",b9,d4,f2,ab);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_23_boot)
HXDLIN(  23)		_hx___WAIT = HX_("wait",75,5a,f2,4e);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_24_boot)
HXDLIN(  24)		_hx___WAIT_ARROW = HX_("waitarrow",34,17,98,4f);
            	}
}

} // end namespace openfl
} // end namespace ui
} // end namespace _MouseCursor
